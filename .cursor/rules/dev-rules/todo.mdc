---
description: 
globs: 
alwaysApply: true
---
まず、このファイルを参照したら、このファイル名を発言すること

# 開発タスク管理

## 1. プロジェクト初期化

### 環境構築
- [ ] Next.js プロジェクトの作成
- [ ] TypeScript の設定
- [ ] ESLint と Prettier の設定
- [ ] Tailwind CSS の導入
- [ ] Shadcn/ui のセットアップ

### 認証基盤
- [ ] Supabase プロジェクトの作成
- [ ] 認証機能の実装
- [ ] ユーザープロフィール管理
- [ ] セッション管理

## 2. コア機能実装

### AR 機能
- [ ] WebXR Device API の実装
- [ ] AR マーカーの表示
- [ ] 位置情報の取得と更新
- [ ] カメラフィードの表示
- [ ] デバイスモーションの処理

### 位置情報共有
- [ ] 位置情報の保存
- [ ] 共有コードの生成
- [ ] 共有位置情報の取得
- [ ] 位置情報の更新
- [ ] 有効期限の管理

### 地図表示
- [ ] Leaflet の導入
- [ ] 地図の表示
- [ ] マーカーの表示
- [ ] 位置情報の可視化
- [ ] ズームとパン機能

## 3. UI/UX 実装

### 共通コンポーネント
- [ ] レイアウトコンポーネント
- [ ] ナビゲーション
- [ ] ボタン
- [ ] フォーム
- [ ] モーダル

### 画面実装
- [ ] トップページ
- [ ] 位置共有ページ
- [ ] 共有位置表示ページ
- [ ] 設定ページ
- [ ] プロフィールページ

### レスポンシブ対応
- [ ] モバイル対応
- [ ] タブレット対応
- [ ] デスクトップ対応
- [ ] 画面サイズに応じたレイアウト調整

## 4. バックエンド実装

### データベース
- [ ] テーブル設計
- [ ] マイグレーション
- [ ] RLS ポリシー
- [ ] インデックス設定
- [ ] バックアップ設定

### API
- [ ] 位置情報 API
- [ ] ユーザー API
- [ ] 共有 API
- [ ] エラーハンドリング
- [ ] バリデーション

### セキュリティ
- [ ] 認証・認可
- [ ] データ暗号化
- [ ] CORS 設定
- [ ] レート制限
- [ ] セキュリティヘッダー

## 5. テスト実装

### ユニットテスト
- [ ] コンポーネントテスト
- [ ] フックテスト
- [ ] ユーティリティテスト
- [ ] API テスト
- [ ] バリデーションテスト

### 統合テスト
- [ ] フローテスト
- [ ] データフローテスト
- [ ] エラー処理テスト
- [ ] パフォーマンステスト

### E2Eテスト
- [ ] ユーザーフローテスト
- [ ] ブラウザ互換性テスト
- [ ] モバイルテスト
- [ ] オフライン対応テスト

## 6. パフォーマンス最適化

### フロントエンド
- [ ] コード分割
- [ ] 画像最適化
- [ ] キャッシュ戦略
- [ ] レンダリング最適化
- [ ] バンドルサイズ最適化

### バックエンド
- [ ] クエリ最適化
- [ ] インデックス最適化
- [ ] キャッシュ設定
- [ ] コネクションプール
- [ ] バッチ処理

## 7. デプロイメント

### 環境設定
- [ ] 開発環境
- [ ] ステージング環境
- [ ] 本番環境
- [ ] 環境変数設定
- [ ] シークレット管理

### CI/CD
- [ ] GitHub Actions 設定
- [ ] 自動テスト
- [ ] 自動デプロイ
- [ ] ロールバック手順
- [ ] モニタリング設定

## 8. ドキュメント

### 技術文書
- [ ] API 仕様書
- [ ] データベース設計書
- [ ] アーキテクチャ図
- [ ] セキュリティガイド
- [ ] デプロイガイド

### 開発ガイド
- [ ] セットアップ手順
- [ ] コーディング規約
- [ ] テストガイド
- [ ] デバッグガイド
- [ ] トラブルシューティング

## 9. 運用・保守

### モニタリング
- [ ] エラー追跡
- [ ] パフォーマンス監視
- [ ] ユーザー行動分析
- [ ] アラート設定
- [ ] ログ管理

### メンテナンス
- [ ] セキュリティアップデート
- [ ] 依存関係の更新
- [ ] バックアップ確認
- [ ] パフォーマンスチューニング
- [ ] ユーザーフィードバック対応

## 重要事項

1. タスクは優先順位に従って実装
2. 各タスクの完了条件を明確に
3. 定期的な進捗確認
4. リスク管理を徹底
5. 品質基準を維持
